name: iOS Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches:
      - 'none'

concurrency:
  group: ios-build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-15

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Setup Xcode version
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: latest-stable

      - name: Set Default Scheme
        run: |
          default=WildWestOnline-Package
          echo $default > default
          echo "Using default scheme: $default"

      - name: Build
        env:
          scheme: default
          platform: "iOS Simulator"
        run: |
          # Get the list of simulators, filter for iPhone devices, and sort by iOS version numerically
          device=$(xcrun simctl list devices | grep -i "iPhone" | sed -E 's/([A-Za-z0-9 ]+) \([A-F0-9-]+\) \((.*)\)/\1|\2/' | sort -t '|' -k2,2V | tail -n 1 | cut -d '|' -f 1 | xargs)
          echo "Using device: $device"

          [ "$scheme" = "default" ] && scheme=$(cat default)

          xcodebuild build-for-testing -scheme "$scheme" -destination "platform=$platform,name=$device" -skipPackagePluginValidation

      - name: Test
        env:
          scheme: default
          platform: "iOS Simulator"
        run: |
          # Get the list of simulators, filter for iPhone devices, and sort by iOS version numerically
          device=$(xcrun simctl list devices | grep -i "iPhone" | sed -E 's/([A-Za-z0-9 ]+) \([A-F0-9-]+\) \((.*)\)/\1|\2/' | sort -t '|' -k2,2V | tail -n 1 | cut -d '|' -f 1 | xargs)
          echo "Using device: $device"

          [ "$scheme" = "default" ] && scheme=$(cat default)

          xcodebuild test-without-building -scheme "$scheme" -destination "platform=$platform,name=$device" -parallel-testing-enabled YES -skipPackagePluginValidation
